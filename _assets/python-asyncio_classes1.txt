@startuml
skinparam backgroundColor transparent
skinparam handwritten true
AbstractEventLoop : run_forever()
AbstractEventLoop : run_until_complete()
AbstractEventLoop : is_running()
AbstractEventLoop : stop()
AbstractEventLoop : is_closed()
AbstractEventLoop : close()
AbstractEventLoop : shutdown_asyncgens()
AbstractEventLoop : call_soon()
AbstractEventLoop : call_soon_threadsafe()
AbstractEventLoop : call_later()
AbstractEventLoop : call_at()
AbstractEventLoop : time()
AbstractEventLoop : create_future()
AbstractEventLoop : create_task()
AbstractEventLoop : set_task_factory()
AbstractEventLoop : get_task_factory()
AbstractEventLoop : create_connection()
AbstractEventLoop : create_datagram_endpoint()
AbstractEventLoop : create_unix_connection()
AbstractEventLoop : create_server()
AbstractEventLoop : create_unix_server()
AbstractEventLoop : connect_accepted_socket()
AbstractEventLoop : add_reader()
AbstractEventLoop : remove_reader()
AbstractEventLoop : add_writer()
AbstractEventLoop : remove_writer()
AbstractEventLoop : sock_recv()
AbstractEventLoop : sock_sendall()
AbstractEventLoop : sock_connect()
AbstractEventLoop : sock_accept()
AbstractEventLoop : getaddrinfo()
AbstractEventLoop : getnameinfo()
AbstractEventLoop : connect_read_pipe()
AbstractEventLoop : connect_write_pipe()
AbstractEventLoop : add_signal_handler()
AbstractEventLoop : remove_signal_handler()
AbstractEventLoop : run_in_executor()
AbstractEventLoop : set_default_executor()
AbstractEventLoop : set_exception_handler()
AbstractEventLoop : get_exception_handler()
AbstractEventLoop : default_exception_handler()
AbstractEventLoop : call_exception_handler()
AbstractEventLoop <|-- BaseEventLoop
AbstractEventLoop -- Server
Server : close()
Server : wait_closed()
Server : sockets
AbstractEventLoop -- Handle
Handle : cancel()
BaseEventLoop <|-- BaseSelectorEventLoop
BaseSelectorEventLoop <|-- _UnixSelectorEventLoop
BaseSelectorEventLoop <|-- _WindowsSelectorEventLoop
BaseEventLoop <|-- BaseProactorEventLoop
BaseProactorEventLoop <|-- ProactorEventLoop
@enduml
